name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

  cache:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  setup-java:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

  setup-gradle:
    runs-on: ubuntu-latest
    needs: setup-java
    steps:
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2

  give-execute-permission:
    runs-on: ubuntu-latest
    needs: setup-gradle
    steps:
      - name: Give execute permission to gradlew
        run: chmod +x gradlew

  build:
    runs-on: ubuntu-latest
    needs: give-execute-permission
    steps:
      - name: Build with Gradle Wrapper
        run: ./gradlew build

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: web docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_REPO }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker rm -f $(docker ps -q -f "name=Influx-API") || true
            docker rmi $(docker images ${{ secrets.DOCKER_REPO }} -q) || true
            docker pull ${{ secrets.DOCKER_REPO }}
            docker run -d -p 8080:8080 --name Influx-API ${{ secrets.DOCKER_REPO }}
